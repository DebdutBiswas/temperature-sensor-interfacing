
TemperatureSensorInterfacing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800200  0000092c  000009c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000092c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000019  00800230  00800230  000009f0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009f0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a20  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000a60  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a86  00000000  00000000  00000b38  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e00  00000000  00000000  000025be  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a7b  00000000  00000000  000033be  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000248  00000000  00000000  00003e3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007a6  00000000  00000000  00004084  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b89  00000000  00000000  0000482a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  000053b3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
   c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
  e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ec e2       	ldi	r30, 0x2C	; 44
  fc:	f9 e0       	ldi	r31, 0x09	; 9
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 33       	cpi	r26, 0x30	; 48
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a0 e3       	ldi	r26, 0x30	; 48
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a9 34       	cpi	r26, 0x49	; 73
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	0e 94 16 04 	call	0x82c	; 0x82c <main>
 122:	0c 94 94 04 	jmp	0x928	; 0x928 <_exit>

00000126 <__bad_interrupt>:
 126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <lcd_port_config>:
{
	if(th_getData()) //IF ABLE TO GET DATA THEN RETURN HUMIDITY IN FLOAT
		return dht11.HUM + dht11.HUM_F * 0.01f;
	else
		return NAN;
}
 12a:	87 b1       	in	r24, 0x07	; 7
 12c:	87 6f       	ori	r24, 0xF7	; 247
 12e:	87 b9       	out	0x07, r24	; 7
 130:	88 b1       	in	r24, 0x08	; 8
 132:	88 70       	andi	r24, 0x08	; 8
 134:	88 b9       	out	0x08, r24	; 8
 136:	08 95       	ret

00000138 <lcd_reset>:
 138:	86 e6       	ldi	r24, 0x66	; 102
 13a:	9e e0       	ldi	r25, 0x0E	; 14
 13c:	01 97       	sbiw	r24, 0x01	; 1
 13e:	f1 f7       	brne	.-4      	; 0x13c <lcd_reset+0x4>
 140:	00 00       	nop
 142:	40 98       	cbi	0x08, 0	; 8
 144:	41 98       	cbi	0x08, 1	; 8
 146:	80 e3       	ldi	r24, 0x30	; 48
 148:	88 b9       	out	0x08, r24	; 8
 14a:	42 9a       	sbi	0x08, 2	; 8
 14c:	ef ef       	ldi	r30, 0xFF	; 255
 14e:	f7 e4       	ldi	r31, 0x47	; 71
 150:	31 97       	sbiw	r30, 0x01	; 1
 152:	f1 f7       	brne	.-4      	; 0x150 <lcd_reset+0x18>
 154:	00 c0       	rjmp	.+0      	; 0x156 <lcd_reset+0x1e>
 156:	00 00       	nop
 158:	42 98       	cbi	0x08, 2	; 8
 15a:	e6 e6       	ldi	r30, 0x66	; 102
 15c:	fe e0       	ldi	r31, 0x0E	; 14
 15e:	31 97       	sbiw	r30, 0x01	; 1
 160:	f1 f7       	brne	.-4      	; 0x15e <lcd_reset+0x26>
 162:	00 00       	nop
 164:	40 98       	cbi	0x08, 0	; 8
 166:	41 98       	cbi	0x08, 1	; 8
 168:	88 b9       	out	0x08, r24	; 8
 16a:	42 9a       	sbi	0x08, 2	; 8
 16c:	ef ef       	ldi	r30, 0xFF	; 255
 16e:	f7 e4       	ldi	r31, 0x47	; 71
 170:	31 97       	sbiw	r30, 0x01	; 1
 172:	f1 f7       	brne	.-4      	; 0x170 <lcd_reset+0x38>
 174:	00 c0       	rjmp	.+0      	; 0x176 <lcd_reset+0x3e>
 176:	00 00       	nop
 178:	42 98       	cbi	0x08, 2	; 8
 17a:	e6 e6       	ldi	r30, 0x66	; 102
 17c:	fe e0       	ldi	r31, 0x0E	; 14
 17e:	31 97       	sbiw	r30, 0x01	; 1
 180:	f1 f7       	brne	.-4      	; 0x17e <lcd_reset+0x46>
 182:	00 00       	nop
 184:	40 98       	cbi	0x08, 0	; 8
 186:	41 98       	cbi	0x08, 1	; 8
 188:	88 b9       	out	0x08, r24	; 8
 18a:	42 9a       	sbi	0x08, 2	; 8
 18c:	8f ef       	ldi	r24, 0xFF	; 255
 18e:	97 e4       	ldi	r25, 0x47	; 71
 190:	01 97       	sbiw	r24, 0x01	; 1
 192:	f1 f7       	brne	.-4      	; 0x190 <lcd_reset+0x58>
 194:	00 c0       	rjmp	.+0      	; 0x196 <lcd_reset+0x5e>
 196:	00 00       	nop
 198:	42 98       	cbi	0x08, 2	; 8
 19a:	e6 e6       	ldi	r30, 0x66	; 102
 19c:	fe e0       	ldi	r31, 0x0E	; 14
 19e:	31 97       	sbiw	r30, 0x01	; 1
 1a0:	f1 f7       	brne	.-4      	; 0x19e <lcd_reset+0x66>
 1a2:	00 00       	nop
 1a4:	40 98       	cbi	0x08, 0	; 8
 1a6:	41 98       	cbi	0x08, 1	; 8
 1a8:	80 e2       	ldi	r24, 0x20	; 32
 1aa:	88 b9       	out	0x08, r24	; 8
 1ac:	42 9a       	sbi	0x08, 2	; 8
 1ae:	8f ef       	ldi	r24, 0xFF	; 255
 1b0:	97 e4       	ldi	r25, 0x47	; 71
 1b2:	01 97       	sbiw	r24, 0x01	; 1
 1b4:	f1 f7       	brne	.-4      	; 0x1b2 <lcd_reset+0x7a>
 1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <lcd_reset+0x80>
 1b8:	00 00       	nop
 1ba:	42 98       	cbi	0x08, 2	; 8
 1bc:	08 95       	ret

000001be <lcd_wr_command>:
 1be:	98 b1       	in	r25, 0x08	; 8
 1c0:	9f 70       	andi	r25, 0x0F	; 15
 1c2:	98 b9       	out	0x08, r25	; 8
 1c4:	98 b1       	in	r25, 0x08	; 8
 1c6:	28 2f       	mov	r18, r24
 1c8:	20 7f       	andi	r18, 0xF0	; 240
 1ca:	92 2b       	or	r25, r18
 1cc:	98 b9       	out	0x08, r25	; 8
 1ce:	40 98       	cbi	0x08, 0	; 8
 1d0:	41 98       	cbi	0x08, 1	; 8
 1d2:	42 9a       	sbi	0x08, 2	; 8
 1d4:	ef ef       	ldi	r30, 0xFF	; 255
 1d6:	f7 e4       	ldi	r31, 0x47	; 71
 1d8:	31 97       	sbiw	r30, 0x01	; 1
 1da:	f1 f7       	brne	.-4      	; 0x1d8 <lcd_wr_command+0x1a>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <lcd_wr_command+0x20>
 1de:	00 00       	nop
 1e0:	42 98       	cbi	0x08, 2	; 8
 1e2:	98 b1       	in	r25, 0x08	; 8
 1e4:	9f 70       	andi	r25, 0x0F	; 15
 1e6:	98 b9       	out	0x08, r25	; 8
 1e8:	98 b1       	in	r25, 0x08	; 8
 1ea:	82 95       	swap	r24
 1ec:	80 7f       	andi	r24, 0xF0	; 240
 1ee:	89 2b       	or	r24, r25
 1f0:	88 b9       	out	0x08, r24	; 8
 1f2:	40 98       	cbi	0x08, 0	; 8
 1f4:	41 98       	cbi	0x08, 1	; 8
 1f6:	42 9a       	sbi	0x08, 2	; 8
 1f8:	8f ef       	ldi	r24, 0xFF	; 255
 1fa:	97 e4       	ldi	r25, 0x47	; 71
 1fc:	01 97       	sbiw	r24, 0x01	; 1
 1fe:	f1 f7       	brne	.-4      	; 0x1fc <lcd_wr_command+0x3e>
 200:	00 c0       	rjmp	.+0      	; 0x202 <lcd_wr_command+0x44>
 202:	00 00       	nop
 204:	42 98       	cbi	0x08, 2	; 8
 206:	08 95       	ret

00000208 <lcd_init>:
 208:	0e 94 95 00 	call	0x12a	; 0x12a <lcd_port_config>
 20c:	0e 94 9c 00 	call	0x138	; 0x138 <lcd_reset>
 210:	86 e6       	ldi	r24, 0x66	; 102
 212:	9e e0       	ldi	r25, 0x0E	; 14
 214:	01 97       	sbiw	r24, 0x01	; 1
 216:	f1 f7       	brne	.-4      	; 0x214 <lcd_init+0xc>
 218:	00 00       	nop
 21a:	88 e2       	ldi	r24, 0x28	; 40
 21c:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 226:	86 e0       	ldi	r24, 0x06	; 6
 228:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 22c:	8e e0       	ldi	r24, 0x0E	; 14
 22e:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 232:	80 e8       	ldi	r24, 0x80	; 128
 234:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 238:	08 95       	ret

0000023a <lcd_wr_char>:
 23a:	98 b1       	in	r25, 0x08	; 8
 23c:	9f 70       	andi	r25, 0x0F	; 15
 23e:	98 b9       	out	0x08, r25	; 8
 240:	98 b1       	in	r25, 0x08	; 8
 242:	28 2f       	mov	r18, r24
 244:	20 7f       	andi	r18, 0xF0	; 240
 246:	92 2b       	or	r25, r18
 248:	98 b9       	out	0x08, r25	; 8
 24a:	40 9a       	sbi	0x08, 0	; 8
 24c:	41 98       	cbi	0x08, 1	; 8
 24e:	42 9a       	sbi	0x08, 2	; 8
 250:	ef ef       	ldi	r30, 0xFF	; 255
 252:	f7 e4       	ldi	r31, 0x47	; 71
 254:	31 97       	sbiw	r30, 0x01	; 1
 256:	f1 f7       	brne	.-4      	; 0x254 <lcd_wr_char+0x1a>
 258:	00 c0       	rjmp	.+0      	; 0x25a <lcd_wr_char+0x20>
 25a:	00 00       	nop
 25c:	42 98       	cbi	0x08, 2	; 8
 25e:	98 b1       	in	r25, 0x08	; 8
 260:	9f 70       	andi	r25, 0x0F	; 15
 262:	98 b9       	out	0x08, r25	; 8
 264:	98 b1       	in	r25, 0x08	; 8
 266:	82 95       	swap	r24
 268:	80 7f       	andi	r24, 0xF0	; 240
 26a:	89 2b       	or	r24, r25
 26c:	88 b9       	out	0x08, r24	; 8
 26e:	40 9a       	sbi	0x08, 0	; 8
 270:	41 98       	cbi	0x08, 1	; 8
 272:	42 9a       	sbi	0x08, 2	; 8
 274:	8f ef       	ldi	r24, 0xFF	; 255
 276:	97 e4       	ldi	r25, 0x47	; 71
 278:	01 97       	sbiw	r24, 0x01	; 1
 27a:	f1 f7       	brne	.-4      	; 0x278 <lcd_wr_char+0x3e>
 27c:	00 c0       	rjmp	.+0      	; 0x27e <lcd_wr_char+0x44>
 27e:	00 00       	nop
 280:	42 98       	cbi	0x08, 2	; 8
 282:	08 95       	ret

00000284 <lcd_home>:
 284:	80 e8       	ldi	r24, 0x80	; 128
 286:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 28a:	08 95       	ret

0000028c <lcd_cursor>:
 28c:	82 30       	cpi	r24, 0x02	; 2
 28e:	71 f0       	breq	.+28     	; 0x2ac <lcd_cursor+0x20>
 290:	18 f4       	brcc	.+6      	; 0x298 <lcd_cursor+0xc>
 292:	81 30       	cpi	r24, 0x01	; 1
 294:	31 f0       	breq	.+12     	; 0x2a2 <lcd_cursor+0x16>
 296:	08 95       	ret
 298:	83 30       	cpi	r24, 0x03	; 3
 29a:	69 f0       	breq	.+26     	; 0x2b6 <lcd_cursor+0x2a>
 29c:	84 30       	cpi	r24, 0x04	; 4
 29e:	81 f0       	breq	.+32     	; 0x2c0 <lcd_cursor+0x34>
 2a0:	08 95       	ret
 2a2:	8f e7       	ldi	r24, 0x7F	; 127
 2a4:	86 0f       	add	r24, r22
 2a6:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 2aa:	08 95       	ret
 2ac:	8f eb       	ldi	r24, 0xBF	; 191
 2ae:	86 0f       	add	r24, r22
 2b0:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 2b4:	08 95       	ret
 2b6:	83 e9       	ldi	r24, 0x93	; 147
 2b8:	86 0f       	add	r24, r22
 2ba:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 2be:	08 95       	ret
 2c0:	83 ed       	ldi	r24, 0xD3	; 211
 2c2:	86 0f       	add	r24, r22
 2c4:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 2c8:	08 95       	ret

000002ca <lcd_string>:
 2ca:	cf 93       	push	r28
 2cc:	df 93       	push	r29
 2ce:	ec 01       	movw	r28, r24
 2d0:	88 81       	ld	r24, Y
 2d2:	88 23       	and	r24, r24
 2d4:	31 f0       	breq	.+12     	; 0x2e2 <lcd_string+0x18>
 2d6:	21 96       	adiw	r28, 0x01	; 1
 2d8:	0e 94 1d 01 	call	0x23a	; 0x23a <lcd_wr_char>
 2dc:	89 91       	ld	r24, Y+
 2de:	81 11       	cpse	r24, r1
 2e0:	fb cf       	rjmp	.-10     	; 0x2d8 <lcd_string+0xe>
 2e2:	df 91       	pop	r29
 2e4:	cf 91       	pop	r28
 2e6:	08 95       	ret

000002e8 <lcd_print>:
 2e8:	0f 93       	push	r16
 2ea:	1f 93       	push	r17
 2ec:	cf 93       	push	r28
 2ee:	df 93       	push	r29
 2f0:	8a 01       	movw	r16, r20
 2f2:	e9 01       	movw	r28, r18
 2f4:	88 23       	and	r24, r24
 2f6:	11 f0       	breq	.+4      	; 0x2fc <lcd_print+0x14>
 2f8:	61 11       	cpse	r22, r1
 2fa:	03 c0       	rjmp	.+6      	; 0x302 <lcd_print+0x1a>
 2fc:	0e 94 42 01 	call	0x284	; 0x284 <lcd_home>
 300:	02 c0       	rjmp	.+4      	; 0x306 <lcd_print+0x1e>
 302:	0e 94 46 01 	call	0x28c	; 0x28c <lcd_cursor>
 306:	c5 30       	cpi	r28, 0x05	; 5
 308:	d1 05       	cpc	r29, r1
 30a:	09 f0       	breq	.+2      	; 0x30e <lcd_print+0x26>
 30c:	df c0       	rjmp	.+446    	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 30e:	98 01       	movw	r18, r16
 310:	32 95       	swap	r19
 312:	22 95       	swap	r18
 314:	2f 70       	andi	r18, 0x0F	; 15
 316:	23 27       	eor	r18, r19
 318:	3f 70       	andi	r19, 0x0F	; 15
 31a:	23 27       	eor	r18, r19
 31c:	a7 e4       	ldi	r26, 0x47	; 71
 31e:	b3 e0       	ldi	r27, 0x03	; 3
 320:	0e 94 85 04 	call	0x90a	; 0x90a <__umulhisi3>
 324:	96 95       	lsr	r25
 326:	87 95       	ror	r24
 328:	96 95       	lsr	r25
 32a:	87 95       	ror	r24
 32c:	96 95       	lsr	r25
 32e:	87 95       	ror	r24
 330:	c0 96       	adiw	r24, 0x30	; 48
 332:	90 93 38 02 	sts	0x0238, r25	; 0x800238 <million+0x1>
 336:	80 93 37 02 	sts	0x0237, r24	; 0x800237 <million>
 33a:	0e 94 1d 01 	call	0x23a	; 0x23a <lcd_wr_char>
 33e:	98 01       	movw	r18, r16
 340:	36 95       	lsr	r19
 342:	27 95       	ror	r18
 344:	36 95       	lsr	r19
 346:	27 95       	ror	r18
 348:	36 95       	lsr	r19
 34a:	27 95       	ror	r18
 34c:	a5 ec       	ldi	r26, 0xC5	; 197
 34e:	b0 e2       	ldi	r27, 0x20	; 32
 350:	0e 94 85 04 	call	0x90a	; 0x90a <__umulhisi3>
 354:	ac 01       	movw	r20, r24
 356:	52 95       	swap	r21
 358:	42 95       	swap	r20
 35a:	4f 70       	andi	r20, 0x0F	; 15
 35c:	45 27       	eor	r20, r21
 35e:	5f 70       	andi	r21, 0x0F	; 15
 360:	45 27       	eor	r20, r21
 362:	50 93 3d 02 	sts	0x023D, r21	; 0x80023d <lcd_char_temp+0x1>
 366:	40 93 3c 02 	sts	0x023C, r20	; 0x80023c <lcd_char_temp>
 36a:	9a 01       	movw	r18, r20
 36c:	ad ec       	ldi	r26, 0xCD	; 205
 36e:	bc ec       	ldi	r27, 0xCC	; 204
 370:	0e 94 85 04 	call	0x90a	; 0x90a <__umulhisi3>
 374:	96 95       	lsr	r25
 376:	87 95       	ror	r24
 378:	96 95       	lsr	r25
 37a:	87 95       	ror	r24
 37c:	96 95       	lsr	r25
 37e:	87 95       	ror	r24
 380:	9c 01       	movw	r18, r24
 382:	22 0f       	add	r18, r18
 384:	33 1f       	adc	r19, r19
 386:	88 0f       	add	r24, r24
 388:	99 1f       	adc	r25, r25
 38a:	88 0f       	add	r24, r24
 38c:	99 1f       	adc	r25, r25
 38e:	88 0f       	add	r24, r24
 390:	99 1f       	adc	r25, r25
 392:	82 0f       	add	r24, r18
 394:	93 1f       	adc	r25, r19
 396:	9a 01       	movw	r18, r20
 398:	28 1b       	sub	r18, r24
 39a:	39 0b       	sbc	r19, r25
 39c:	c9 01       	movw	r24, r18
 39e:	c0 96       	adiw	r24, 0x30	; 48
 3a0:	90 93 48 02 	sts	0x0248, r25	; 0x800248 <thousand+0x1>
 3a4:	80 93 47 02 	sts	0x0247, r24	; 0x800247 <thousand>
 3a8:	0e 94 1d 01 	call	0x23a	; 0x23a <lcd_wr_char>
 3ac:	03 c0       	rjmp	.+6      	; 0x3b4 <lcd_print+0xcc>
 3ae:	c3 30       	cpi	r28, 0x03	; 3
 3b0:	d1 05       	cpc	r29, r1
 3b2:	91 f5       	brne	.+100    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3b4:	98 01       	movw	r18, r16
 3b6:	36 95       	lsr	r19
 3b8:	27 95       	ror	r18
 3ba:	36 95       	lsr	r19
 3bc:	27 95       	ror	r18
 3be:	ab e7       	ldi	r26, 0x7B	; 123
 3c0:	b4 e1       	ldi	r27, 0x14	; 20
 3c2:	0e 94 85 04 	call	0x90a	; 0x90a <__umulhisi3>
 3c6:	ac 01       	movw	r20, r24
 3c8:	56 95       	lsr	r21
 3ca:	47 95       	ror	r20
 3cc:	50 93 3d 02 	sts	0x023D, r21	; 0x80023d <lcd_char_temp+0x1>
 3d0:	40 93 3c 02 	sts	0x023C, r20	; 0x80023c <lcd_char_temp>
 3d4:	9a 01       	movw	r18, r20
 3d6:	ad ec       	ldi	r26, 0xCD	; 205
 3d8:	bc ec       	ldi	r27, 0xCC	; 204
 3da:	0e 94 85 04 	call	0x90a	; 0x90a <__umulhisi3>
 3de:	96 95       	lsr	r25
 3e0:	87 95       	ror	r24
 3e2:	96 95       	lsr	r25
 3e4:	87 95       	ror	r24
 3e6:	96 95       	lsr	r25
 3e8:	87 95       	ror	r24
 3ea:	9c 01       	movw	r18, r24
 3ec:	22 0f       	add	r18, r18
 3ee:	33 1f       	adc	r19, r19
 3f0:	88 0f       	add	r24, r24
 3f2:	99 1f       	adc	r25, r25
 3f4:	88 0f       	add	r24, r24
 3f6:	99 1f       	adc	r25, r25
 3f8:	88 0f       	add	r24, r24
 3fa:	99 1f       	adc	r25, r25
 3fc:	82 0f       	add	r24, r18
 3fe:	93 1f       	adc	r25, r19
 400:	9a 01       	movw	r18, r20
 402:	28 1b       	sub	r18, r24
 404:	39 0b       	sbc	r19, r25
 406:	c9 01       	movw	r24, r18
 408:	c0 96       	adiw	r24, 0x30	; 48
 40a:	90 93 3f 02 	sts	0x023F, r25	; 0x80023f <hundred+0x1>
 40e:	80 93 3e 02 	sts	0x023E, r24	; 0x80023e <hundred>
 412:	0e 94 1d 01 	call	0x23a	; 0x23a <lcd_wr_char>
 416:	04 c0       	rjmp	.+8      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 418:	c2 30       	cpi	r28, 0x02	; 2
 41a:	d1 05       	cpc	r29, r1
 41c:	09 f0       	breq	.+2      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 41e:	5b c0       	rjmp	.+182    	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 420:	98 01       	movw	r18, r16
 422:	ad ec       	ldi	r26, 0xCD	; 205
 424:	bc ec       	ldi	r27, 0xCC	; 204
 426:	0e 94 85 04 	call	0x90a	; 0x90a <__umulhisi3>
 42a:	ac 01       	movw	r20, r24
 42c:	56 95       	lsr	r21
 42e:	47 95       	ror	r20
 430:	56 95       	lsr	r21
 432:	47 95       	ror	r20
 434:	56 95       	lsr	r21
 436:	47 95       	ror	r20
 438:	50 93 3d 02 	sts	0x023D, r21	; 0x80023d <lcd_char_temp+0x1>
 43c:	40 93 3c 02 	sts	0x023C, r20	; 0x80023c <lcd_char_temp>
 440:	9a 01       	movw	r18, r20
 442:	0e 94 85 04 	call	0x90a	; 0x90a <__umulhisi3>
 446:	96 95       	lsr	r25
 448:	87 95       	ror	r24
 44a:	96 95       	lsr	r25
 44c:	87 95       	ror	r24
 44e:	96 95       	lsr	r25
 450:	87 95       	ror	r24
 452:	9c 01       	movw	r18, r24
 454:	22 0f       	add	r18, r18
 456:	33 1f       	adc	r19, r19
 458:	88 0f       	add	r24, r24
 45a:	99 1f       	adc	r25, r25
 45c:	88 0f       	add	r24, r24
 45e:	99 1f       	adc	r25, r25
 460:	88 0f       	add	r24, r24
 462:	99 1f       	adc	r25, r25
 464:	82 0f       	add	r24, r18
 466:	93 1f       	adc	r25, r19
 468:	9a 01       	movw	r18, r20
 46a:	28 1b       	sub	r18, r24
 46c:	39 0b       	sbc	r19, r25
 46e:	c9 01       	movw	r24, r18
 470:	c0 96       	adiw	r24, 0x30	; 48
 472:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <tens+0x1>
 476:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <tens>
 47a:	0e 94 1d 01 	call	0x23a	; 0x23a <lcd_wr_char>
 47e:	98 01       	movw	r18, r16
 480:	ad ec       	ldi	r26, 0xCD	; 205
 482:	bc ec       	ldi	r27, 0xCC	; 204
 484:	0e 94 85 04 	call	0x90a	; 0x90a <__umulhisi3>
 488:	96 95       	lsr	r25
 48a:	87 95       	ror	r24
 48c:	96 95       	lsr	r25
 48e:	87 95       	ror	r24
 490:	96 95       	lsr	r25
 492:	87 95       	ror	r24
 494:	9c 01       	movw	r18, r24
 496:	22 0f       	add	r18, r18
 498:	33 1f       	adc	r19, r19
 49a:	88 0f       	add	r24, r24
 49c:	99 1f       	adc	r25, r25
 49e:	88 0f       	add	r24, r24
 4a0:	99 1f       	adc	r25, r25
 4a2:	88 0f       	add	r24, r24
 4a4:	99 1f       	adc	r25, r25
 4a6:	82 0f       	add	r24, r18
 4a8:	93 1f       	adc	r25, r19
 4aa:	98 01       	movw	r18, r16
 4ac:	28 1b       	sub	r18, r24
 4ae:	39 0b       	sbc	r19, r25
 4b0:	c9 01       	movw	r24, r18
 4b2:	c0 96       	adiw	r24, 0x30	; 48
 4b4:	90 93 46 02 	sts	0x0246, r25	; 0x800246 <unit+0x1>
 4b8:	80 93 45 02 	sts	0x0245, r24	; 0x800245 <unit>
 4bc:	0e 94 1d 01 	call	0x23a	; 0x23a <lcd_wr_char>
 4c0:	26 97       	sbiw	r28, 0x06	; 6
 4c2:	6c f0       	brlt	.+26     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4c4:	85 e6       	ldi	r24, 0x65	; 101
 4c6:	0e 94 1d 01 	call	0x23a	; 0x23a <lcd_wr_char>
 4ca:	09 c0       	rjmp	.+18     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4cc:	c4 30       	cpi	r28, 0x04	; 4
 4ce:	d1 05       	cpc	r29, r1
 4d0:	09 f0       	breq	.+2      	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4d2:	6d cf       	rjmp	.-294    	; 0x3ae <lcd_print+0xc6>
 4d4:	34 cf       	rjmp	.-408    	; 0x33e <lcd_print+0x56>
 4d6:	c1 30       	cpi	r28, 0x01	; 1
 4d8:	d1 05       	cpc	r29, r1
 4da:	91 f7       	brne	.-28     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4dc:	d0 cf       	rjmp	.-96     	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 4de:	df 91       	pop	r29
 4e0:	cf 91       	pop	r28
 4e2:	1f 91       	pop	r17
 4e4:	0f 91       	pop	r16
 4e6:	08 95       	ret

000004e8 <lcd_clear>:
 4e8:	81 e0       	ldi	r24, 0x01	; 1
 4ea:	0e 94 df 00 	call	0x1be	; 0x1be <lcd_wr_command>
 4ee:	08 95       	ret

000004f0 <th_port_config>:
 4f0:	ea e0       	ldi	r30, 0x0A	; 10
 4f2:	f1 e0       	ldi	r31, 0x01	; 1
 4f4:	80 81       	ld	r24, Z
 4f6:	80 64       	ori	r24, 0x40	; 64
 4f8:	80 83       	st	Z, r24
 4fa:	08 95       	ret

000004fc <th_init>:
 4fc:	0e 94 78 02 	call	0x4f0	; 0x4f0 <th_port_config>
 500:	2f ef       	ldi	r18, 0xFF	; 255
 502:	8f ef       	ldi	r24, 0xFF	; 255
 504:	9c e2       	ldi	r25, 0x2C	; 44
 506:	21 50       	subi	r18, 0x01	; 1
 508:	80 40       	sbci	r24, 0x00	; 0
 50a:	90 40       	sbci	r25, 0x00	; 0
 50c:	e1 f7       	brne	.-8      	; 0x506 <th_init+0xa>
 50e:	00 c0       	rjmp	.+0      	; 0x510 <th_init+0x14>
 510:	00 00       	nop
 512:	08 95       	ret

00000514 <th_getPulse>:
 514:	60 e0       	ldi	r22, 0x00	; 0
 516:	70 e0       	ldi	r23, 0x00	; 0
 518:	e9 e0       	ldi	r30, 0x09	; 9
 51a:	f1 e0       	ldi	r31, 0x01	; 1
 51c:	48 2f       	mov	r20, r24
 51e:	50 e0       	ldi	r21, 0x00	; 0
 520:	06 c0       	rjmp	.+12     	; 0x52e <th_getPulse+0x1a>
 522:	6f 5f       	subi	r22, 0xFF	; 255
 524:	7f 4f       	sbci	r23, 0xFF	; 255
 526:	61 3b       	cpi	r22, 0xB1	; 177
 528:	86 e3       	ldi	r24, 0x36	; 54
 52a:	78 07       	cpc	r23, r24
 52c:	59 f0       	breq	.+22     	; 0x544 <th_getPulse+0x30>
 52e:	90 81       	ld	r25, Z
 530:	96 fb       	bst	r25, 6
 532:	22 27       	eor	r18, r18
 534:	20 f9       	bld	r18, 0
 536:	30 e0       	ldi	r19, 0x00	; 0
 538:	24 17       	cp	r18, r20
 53a:	35 07       	cpc	r19, r21
 53c:	91 f3       	breq	.-28     	; 0x522 <th_getPulse+0xe>
 53e:	80 e0       	ldi	r24, 0x00	; 0
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	08 95       	ret
 544:	6f ef       	ldi	r22, 0xFF	; 255
 546:	7f ef       	ldi	r23, 0xFF	; 255
 548:	cb 01       	movw	r24, r22
 54a:	08 95       	ret

0000054c <th_wake>:
 54c:	81 e0       	ldi	r24, 0x01	; 1
 54e:	80 93 39 02 	sts	0x0239, r24	; 0x800239 <th_lastResult>
 552:	aa e0       	ldi	r26, 0x0A	; 10
 554:	b1 e0       	ldi	r27, 0x01	; 1
 556:	8c 91       	ld	r24, X
 558:	80 64       	ori	r24, 0x40	; 64
 55a:	8c 93       	st	X, r24
 55c:	eb e0       	ldi	r30, 0x0B	; 11
 55e:	f1 e0       	ldi	r31, 0x01	; 1
 560:	80 81       	ld	r24, Z
 562:	80 64       	ori	r24, 0x40	; 64
 564:	80 83       	st	Z, r24
 566:	86 e6       	ldi	r24, 0x66	; 102
 568:	9e e0       	ldi	r25, 0x0E	; 14
 56a:	01 97       	sbiw	r24, 0x01	; 1
 56c:	f1 f7       	brne	.-4      	; 0x56a <th_wake+0x1e>
 56e:	00 00       	nop
 570:	80 81       	ld	r24, Z
 572:	8f 7b       	andi	r24, 0xBF	; 191
 574:	80 83       	st	Z, r24
 576:	96 e6       	ldi	r25, 0x66	; 102
 578:	26 ee       	ldi	r18, 0xE6	; 230
 57a:	80 e0       	ldi	r24, 0x00	; 0
 57c:	91 50       	subi	r25, 0x01	; 1
 57e:	20 40       	sbci	r18, 0x00	; 0
 580:	80 40       	sbci	r24, 0x00	; 0
 582:	e1 f7       	brne	.-8      	; 0x57c <th_wake+0x30>
 584:	80 81       	ld	r24, Z
 586:	80 64       	ori	r24, 0x40	; 64
 588:	80 83       	st	Z, r24
 58a:	8a ec       	ldi	r24, 0xCA	; 202
 58c:	90 e0       	ldi	r25, 0x00	; 0
 58e:	01 97       	sbiw	r24, 0x01	; 1
 590:	f1 f7       	brne	.-4      	; 0x58e <th_wake+0x42>
 592:	00 c0       	rjmp	.+0      	; 0x594 <th_wake+0x48>
 594:	00 00       	nop
 596:	80 81       	ld	r24, Z
 598:	8f 7b       	andi	r24, 0xBF	; 191
 59a:	80 83       	st	Z, r24
 59c:	8c 91       	ld	r24, X
 59e:	8f 7b       	andi	r24, 0xBF	; 191
 5a0:	8c 93       	st	X, r24
 5a2:	f8 94       	cli
 5a4:	80 e0       	ldi	r24, 0x00	; 0
 5a6:	0e 94 8a 02 	call	0x514	; 0x514 <th_getPulse>
 5aa:	6f 3f       	cpi	r22, 0xFF	; 255
 5ac:	7f 4f       	sbci	r23, 0xFF	; 255
 5ae:	8f 4f       	sbci	r24, 0xFF	; 255
 5b0:	9f 4f       	sbci	r25, 0xFF	; 255
 5b2:	11 f4       	brne	.+4      	; 0x5b8 <th_wake+0x6c>
 5b4:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <th_lastResult>
 5b8:	81 e0       	ldi	r24, 0x01	; 1
 5ba:	0e 94 8a 02 	call	0x514	; 0x514 <th_getPulse>
 5be:	6f 3f       	cpi	r22, 0xFF	; 255
 5c0:	7f 4f       	sbci	r23, 0xFF	; 255
 5c2:	8f 4f       	sbci	r24, 0xFF	; 255
 5c4:	9f 4f       	sbci	r25, 0xFF	; 255
 5c6:	19 f4       	brne	.+6      	; 0x5ce <th_wake+0x82>
 5c8:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <th_lastResult>
 5cc:	07 c0       	rjmp	.+14     	; 0x5dc <th_wake+0x90>
 5ce:	80 91 39 02 	lds	r24, 0x0239	; 0x800239 <th_lastResult>
 5d2:	88 23       	and	r24, r24
 5d4:	19 f0       	breq	.+6      	; 0x5dc <th_wake+0x90>
 5d6:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <__data_end>
 5da:	08 95       	ret
 5dc:	80 91 30 02 	lds	r24, 0x0230	; 0x800230 <__data_end>
 5e0:	8f 5f       	subi	r24, 0xFF	; 255
 5e2:	80 93 30 02 	sts	0x0230, r24	; 0x800230 <__data_end>
 5e6:	83 30       	cpi	r24, 0x03	; 3
 5e8:	20 f0       	brcs	.+8      	; 0x5f2 <th_wake+0xa6>
 5ea:	10 92 30 02 	sts	0x0230, r1	; 0x800230 <__data_end>
 5ee:	80 e0       	ldi	r24, 0x00	; 0
 5f0:	08 95       	ret
 5f2:	78 94       	sei
 5f4:	8f ef       	ldi	r24, 0xFF	; 255
 5f6:	9f ef       	ldi	r25, 0xFF	; 255
 5f8:	2c e2       	ldi	r18, 0x2C	; 44
 5fa:	81 50       	subi	r24, 0x01	; 1
 5fc:	90 40       	sbci	r25, 0x00	; 0
 5fe:	20 40       	sbci	r18, 0x00	; 0
 600:	e1 f7       	brne	.-8      	; 0x5fa <th_wake+0xae>
 602:	00 c0       	rjmp	.+0      	; 0x604 <th_wake+0xb8>
 604:	00 00       	nop
 606:	0e 94 a6 02 	call	0x54c	; 0x54c <th_wake>
 60a:	08 95       	ret

0000060c <th_getData>:
 60c:	4f 92       	push	r4
 60e:	5f 92       	push	r5
 610:	6f 92       	push	r6
 612:	7f 92       	push	r7
 614:	8f 92       	push	r8
 616:	9f 92       	push	r9
 618:	af 92       	push	r10
 61a:	bf 92       	push	r11
 61c:	df 92       	push	r13
 61e:	ef 92       	push	r14
 620:	ff 92       	push	r15
 622:	0f 93       	push	r16
 624:	1f 93       	push	r17
 626:	cf 93       	push	r28
 628:	df 93       	push	r29
 62a:	cd b7       	in	r28, 0x3d	; 61
 62c:	de b7       	in	r29, 0x3e	; 62
 62e:	c5 54       	subi	r28, 0x45	; 69
 630:	d1 40       	sbci	r29, 0x01	; 1
 632:	0f b6       	in	r0, 0x3f	; 63
 634:	f8 94       	cli
 636:	de bf       	out	0x3e, r29	; 62
 638:	0f be       	out	0x3f, r0	; 63
 63a:	cd bf       	out	0x3d, r28	; 61
 63c:	fe 01       	movw	r30, r28
 63e:	ef 5b       	subi	r30, 0xBF	; 191
 640:	fe 4f       	sbci	r31, 0xFE	; 254
 642:	85 e0       	ldi	r24, 0x05	; 5
 644:	df 01       	movw	r26, r30
 646:	1d 92       	st	X+, r1
 648:	8a 95       	dec	r24
 64a:	e9 f7       	brne	.-6      	; 0x646 <th_getData+0x3a>
 64c:	0e 94 a6 02 	call	0x54c	; 0x54c <th_wake>
 650:	d8 2e       	mov	r13, r24
 652:	88 23       	and	r24, r24
 654:	09 f4       	brne	.+2      	; 0x658 <th_getData+0x4c>
 656:	b6 c0       	rjmp	.+364    	; 0x7c4 <th_getData+0x1b8>
 658:	8e 01       	movw	r16, r28
 65a:	0f 5f       	subi	r16, 0xFF	; 255
 65c:	1f 4f       	sbci	r17, 0xFF	; 255
 65e:	7e 01       	movw	r14, r28
 660:	bf eb       	ldi	r27, 0xBF	; 191
 662:	eb 1a       	sub	r14, r27
 664:	be ef       	ldi	r27, 0xFE	; 254
 666:	fb 0a       	sbc	r15, r27
 668:	80 e0       	ldi	r24, 0x00	; 0
 66a:	0e 94 8a 02 	call	0x514	; 0x514 <th_getPulse>
 66e:	f8 01       	movw	r30, r16
 670:	60 83       	st	Z, r22
 672:	71 83       	std	Z+1, r23	; 0x01
 674:	82 83       	std	Z+2, r24	; 0x02
 676:	93 83       	std	Z+3, r25	; 0x03
 678:	81 e0       	ldi	r24, 0x01	; 1
 67a:	0e 94 8a 02 	call	0x514	; 0x514 <th_getPulse>
 67e:	d8 01       	movw	r26, r16
 680:	14 96       	adiw	r26, 0x04	; 4
 682:	6d 93       	st	X+, r22
 684:	7d 93       	st	X+, r23
 686:	8d 93       	st	X+, r24
 688:	9c 93       	st	X, r25
 68a:	17 97       	sbiw	r26, 0x07	; 7
 68c:	08 5f       	subi	r16, 0xF8	; 248
 68e:	1f 4f       	sbci	r17, 0xFF	; 255
 690:	e0 16       	cp	r14, r16
 692:	f1 06       	cpc	r15, r17
 694:	49 f7       	brne	.-46     	; 0x668 <th_getData+0x5c>
 696:	78 94       	sei
 698:	89 80       	ldd	r8, Y+1	; 0x01
 69a:	9a 80       	ldd	r9, Y+2	; 0x02
 69c:	ab 80       	ldd	r10, Y+3	; 0x03
 69e:	bc 80       	ldd	r11, Y+4	; 0x04
 6a0:	4d 80       	ldd	r4, Y+5	; 0x05
 6a2:	5e 80       	ldd	r5, Y+6	; 0x06
 6a4:	6f 80       	ldd	r6, Y+7	; 0x07
 6a6:	78 84       	ldd	r7, Y+8	; 0x08
 6a8:	bf ef       	ldi	r27, 0xFF	; 255
 6aa:	8b 16       	cp	r8, r27
 6ac:	9b 06       	cpc	r9, r27
 6ae:	ab 06       	cpc	r10, r27
 6b0:	bb 06       	cpc	r11, r27
 6b2:	e1 f0       	breq	.+56     	; 0x6ec <th_getData+0xe0>
 6b4:	ef ef       	ldi	r30, 0xFF	; 255
 6b6:	4e 16       	cp	r4, r30
 6b8:	5e 06       	cpc	r5, r30
 6ba:	6e 06       	cpc	r6, r30
 6bc:	7e 06       	cpc	r7, r30
 6be:	d1 f4       	brne	.+52     	; 0x6f4 <th_getData+0xe8>
 6c0:	15 c0       	rjmp	.+42     	; 0x6ec <th_getData+0xe0>
 6c2:	80 80       	ld	r8, Z
 6c4:	91 80       	ldd	r9, Z+1	; 0x01
 6c6:	a2 80       	ldd	r10, Z+2	; 0x02
 6c8:	b3 80       	ldd	r11, Z+3	; 0x03
 6ca:	44 80       	ldd	r4, Z+4	; 0x04
 6cc:	55 80       	ldd	r5, Z+5	; 0x05
 6ce:	66 80       	ldd	r6, Z+6	; 0x06
 6d0:	77 80       	ldd	r7, Z+7	; 0x07
 6d2:	8f ef       	ldi	r24, 0xFF	; 255
 6d4:	88 16       	cp	r8, r24
 6d6:	98 06       	cpc	r9, r24
 6d8:	a8 06       	cpc	r10, r24
 6da:	b8 06       	cpc	r11, r24
 6dc:	39 f0       	breq	.+14     	; 0x6ec <th_getData+0xe0>
 6de:	38 96       	adiw	r30, 0x08	; 8
 6e0:	af ef       	ldi	r26, 0xFF	; 255
 6e2:	4a 16       	cp	r4, r26
 6e4:	5a 06       	cpc	r5, r26
 6e6:	6a 06       	cpc	r6, r26
 6e8:	7a 06       	cpc	r7, r26
 6ea:	41 f4       	brne	.+16     	; 0x6fc <th_getData+0xf0>
 6ec:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <th_lastResult>
 6f0:	d1 2c       	mov	r13, r1
 6f2:	68 c0       	rjmp	.+208    	; 0x7c4 <th_getData+0x1b8>
 6f4:	fe 01       	movw	r30, r28
 6f6:	39 96       	adiw	r30, 0x09	; 9
 6f8:	40 e0       	ldi	r20, 0x00	; 0
 6fa:	50 e0       	ldi	r21, 0x00	; 0
 6fc:	ca 01       	movw	r24, r20
 6fe:	55 23       	and	r21, r21
 700:	0c f4       	brge	.+2      	; 0x704 <th_getData+0xf8>
 702:	07 96       	adiw	r24, 0x07	; 7
 704:	95 95       	asr	r25
 706:	87 95       	ror	r24
 708:	95 95       	asr	r25
 70a:	87 95       	ror	r24
 70c:	95 95       	asr	r25
 70e:	87 95       	ror	r24
 710:	a1 e4       	ldi	r26, 0x41	; 65
 712:	b1 e0       	ldi	r27, 0x01	; 1
 714:	ac 0f       	add	r26, r28
 716:	bd 1f       	adc	r27, r29
 718:	a8 0f       	add	r26, r24
 71a:	b9 1f       	adc	r27, r25
 71c:	2c 91       	ld	r18, X
 71e:	22 0f       	add	r18, r18
 720:	84 14       	cp	r8, r4
 722:	95 04       	cpc	r9, r5
 724:	a6 04       	cpc	r10, r6
 726:	b7 04       	cpc	r11, r7
 728:	40 f0       	brcs	.+16     	; 0x73a <th_getData+0x12e>
 72a:	a1 e4       	ldi	r26, 0x41	; 65
 72c:	b1 e0       	ldi	r27, 0x01	; 1
 72e:	ac 0f       	add	r26, r28
 730:	bd 1f       	adc	r27, r29
 732:	a8 0f       	add	r26, r24
 734:	b9 1f       	adc	r27, r25
 736:	2c 93       	st	X, r18
 738:	08 c0       	rjmp	.+16     	; 0x74a <th_getData+0x13e>
 73a:	a1 e4       	ldi	r26, 0x41	; 65
 73c:	b1 e0       	ldi	r27, 0x01	; 1
 73e:	ac 0f       	add	r26, r28
 740:	bd 1f       	adc	r27, r29
 742:	a8 0f       	add	r26, r24
 744:	b9 1f       	adc	r27, r25
 746:	21 60       	ori	r18, 0x01	; 1
 748:	2c 93       	st	X, r18
 74a:	4f 5f       	subi	r20, 0xFF	; 255
 74c:	5f 4f       	sbci	r21, 0xFF	; 255
 74e:	48 32       	cpi	r20, 0x28	; 40
 750:	51 05       	cpc	r21, r1
 752:	09 f0       	breq	.+2      	; 0x756 <th_getData+0x14a>
 754:	b6 cf       	rjmp	.-148    	; 0x6c2 <th_getData+0xb6>
 756:	cb 5b       	subi	r28, 0xBB	; 187
 758:	de 4f       	sbci	r29, 0xFE	; 254
 75a:	28 81       	ld	r18, Y
 75c:	c5 54       	subi	r28, 0x45	; 69
 75e:	d1 40       	sbci	r29, 0x01	; 1
 760:	cf 5b       	subi	r28, 0xBF	; 191
 762:	de 4f       	sbci	r29, 0xFE	; 254
 764:	e8 81       	ld	r30, Y
 766:	c1 54       	subi	r28, 0x41	; 65
 768:	d1 40       	sbci	r29, 0x01	; 1
 76a:	ce 5b       	subi	r28, 0xBE	; 190
 76c:	de 4f       	sbci	r29, 0xFE	; 254
 76e:	58 81       	ld	r21, Y
 770:	c2 54       	subi	r28, 0x42	; 66
 772:	d1 40       	sbci	r29, 0x01	; 1
 774:	cd 5b       	subi	r28, 0xBD	; 189
 776:	de 4f       	sbci	r29, 0xFE	; 254
 778:	48 81       	ld	r20, Y
 77a:	c3 54       	subi	r28, 0x43	; 67
 77c:	d1 40       	sbci	r29, 0x01	; 1
 77e:	cc 5b       	subi	r28, 0xBC	; 188
 780:	de 4f       	sbci	r29, 0xFE	; 254
 782:	38 81       	ld	r19, Y
 784:	c4 54       	subi	r28, 0x44	; 68
 786:	d1 40       	sbci	r29, 0x01	; 1
 788:	62 2f       	mov	r22, r18
 78a:	70 e0       	ldi	r23, 0x00	; 0
 78c:	85 2f       	mov	r24, r21
 78e:	90 e0       	ldi	r25, 0x00	; 0
 790:	8e 0f       	add	r24, r30
 792:	91 1d       	adc	r25, r1
 794:	84 0f       	add	r24, r20
 796:	91 1d       	adc	r25, r1
 798:	83 0f       	add	r24, r19
 79a:	91 1d       	adc	r25, r1
 79c:	99 27       	eor	r25, r25
 79e:	68 17       	cp	r22, r24
 7a0:	79 07       	cpc	r23, r25
 7a2:	79 f4       	brne	.+30     	; 0x7c2 <th_getData+0x1b6>
 7a4:	a0 e4       	ldi	r26, 0x40	; 64
 7a6:	b2 e0       	ldi	r27, 0x02	; 2
 7a8:	12 96       	adiw	r26, 0x02	; 2
 7aa:	ec 93       	st	X, r30
 7ac:	12 97       	sbiw	r26, 0x02	; 2
 7ae:	13 96       	adiw	r26, 0x03	; 3
 7b0:	5c 93       	st	X, r21
 7b2:	13 97       	sbiw	r26, 0x03	; 3
 7b4:	4c 93       	st	X, r20
 7b6:	11 96       	adiw	r26, 0x01	; 1
 7b8:	3c 93       	st	X, r19
 7ba:	11 97       	sbiw	r26, 0x01	; 1
 7bc:	14 96       	adiw	r26, 0x04	; 4
 7be:	2c 93       	st	X, r18
 7c0:	01 c0       	rjmp	.+2      	; 0x7c4 <th_getData+0x1b8>
 7c2:	d1 2c       	mov	r13, r1
 7c4:	8d 2d       	mov	r24, r13
 7c6:	cb 5b       	subi	r28, 0xBB	; 187
 7c8:	de 4f       	sbci	r29, 0xFE	; 254
 7ca:	0f b6       	in	r0, 0x3f	; 63
 7cc:	f8 94       	cli
 7ce:	de bf       	out	0x3e, r29	; 62
 7d0:	0f be       	out	0x3f, r0	; 63
 7d2:	cd bf       	out	0x3d, r28	; 61
 7d4:	df 91       	pop	r29
 7d6:	cf 91       	pop	r28
 7d8:	1f 91       	pop	r17
 7da:	0f 91       	pop	r16
 7dc:	ff 90       	pop	r15
 7de:	ef 90       	pop	r14
 7e0:	df 90       	pop	r13
 7e2:	bf 90       	pop	r11
 7e4:	af 90       	pop	r10
 7e6:	9f 90       	pop	r9
 7e8:	8f 90       	pop	r8
 7ea:	7f 90       	pop	r7
 7ec:	6f 90       	pop	r6
 7ee:	5f 90       	pop	r5
 7f0:	4f 90       	pop	r4
 7f2:	08 95       	ret

000007f4 <temperatureReading>:
 7f4:	0e 94 06 03 	call	0x60c	; 0x60c <th_getData>
 7f8:	88 23       	and	r24, r24
 7fa:	19 f0       	breq	.+6      	; 0x802 <temperatureReading+0xe>
 7fc:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <dht11>
 800:	08 95       	ret
 802:	80 e0       	ldi	r24, 0x00	; 0
 804:	08 95       	ret

00000806 <humidityReading>:
 806:	0e 94 06 03 	call	0x60c	; 0x60c <th_getData>
 80a:	88 23       	and	r24, r24
 80c:	19 f0       	breq	.+6      	; 0x814 <humidityReading+0xe>
 80e:	80 91 42 02 	lds	r24, 0x0242	; 0x800242 <dht11+0x2>
 812:	08 95       	ret
 814:	80 e0       	ldi	r24, 0x00	; 0
 816:	08 95       	ret

00000818 <port_init>:

char lcd_buff[6];

void port_init()
{
	lcd_init();
 818:	0e 94 04 01 	call	0x208	; 0x208 <lcd_init>
	th_init();
 81c:	0e 94 7e 02 	call	0x4fc	; 0x4fc <th_init>
 820:	08 95       	ret

00000822 <init_devices>:
}

void init_devices(void)
{
	cli(); //Clears the global interrupts
 822:	f8 94       	cli
	port_init();
 824:	0e 94 0c 04 	call	0x818	; 0x818 <port_init>
	sei(); //Enables the global interrupts
 828:	78 94       	sei
 82a:	08 95       	ret

0000082c <main>:
}

int main(void)
{
	init_devices();
 82c:	0e 94 11 04 	call	0x822	; 0x822 <init_devices>
	
	lcd_cursor(1,3);
 830:	63 e0       	ldi	r22, 0x03	; 3
 832:	81 e0       	ldi	r24, 0x01	; 1
 834:	0e 94 46 01 	call	0x28c	; 0x28c <lcd_cursor>
	lcd_string("HACTOBER-2K19");
 838:	80 e0       	ldi	r24, 0x00	; 0
 83a:	92 e0       	ldi	r25, 0x02	; 2
 83c:	0e 94 65 01 	call	0x2ca	; 0x2ca <lcd_string>
	lcd_cursor(2,4);
 840:	64 e0       	ldi	r22, 0x04	; 4
 842:	82 e0       	ldi	r24, 0x02	; 2
 844:	0e 94 46 01 	call	0x28c	; 0x28c <lcd_cursor>
	lcd_string("OPENSOURCE");
 848:	8e e0       	ldi	r24, 0x0E	; 14
 84a:	92 e0       	ldi	r25, 0x02	; 2
 84c:	0e 94 65 01 	call	0x2ca	; 0x2ca <lcd_string>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 850:	2f ef       	ldi	r18, 0xFF	; 255
 852:	8f ef       	ldi	r24, 0xFF	; 255
 854:	99 e5       	ldi	r25, 0x59	; 89
 856:	21 50       	subi	r18, 0x01	; 1
 858:	80 40       	sbci	r24, 0x00	; 0
 85a:	90 40       	sbci	r25, 0x00	; 0
 85c:	e1 f7       	brne	.-8      	; 0x856 <main+0x2a>
 85e:	00 c0       	rjmp	.+0      	; 0x860 <main+0x34>
 860:	00 00       	nop
	_delay_ms(2000);
	lcd_clear();
 862:	0e 94 74 02 	call	0x4e8	; 0x4e8 <lcd_clear>
	
	lcd_cursor(1,6);
 866:	66 e0       	ldi	r22, 0x06	; 6
 868:	81 e0       	ldi	r24, 0x01	; 1
 86a:	0e 94 46 01 	call	0x28c	; 0x28c <lcd_cursor>
	lcd_string("DHT11");
 86e:	89 e1       	ldi	r24, 0x19	; 25
 870:	92 e0       	ldi	r25, 0x02	; 2
 872:	0e 94 65 01 	call	0x2ca	; 0x2ca <lcd_string>
	lcd_cursor(2,7);
 876:	67 e0       	ldi	r22, 0x07	; 7
 878:	82 e0       	ldi	r24, 0x02	; 2
 87a:	0e 94 46 01 	call	0x28c	; 0x28c <lcd_cursor>
	lcd_string(":");
 87e:	8b e2       	ldi	r24, 0x2B	; 43
 880:	92 e0       	ldi	r25, 0x02	; 2
 882:	0e 94 65 01 	call	0x2ca	; 0x2ca <lcd_string>
		lcd_string("% ");
		_delay_ms(1000);
		*/
		
		//Integer data printing code
		lcd_cursor(2,4);
 886:	64 e0       	ldi	r22, 0x04	; 4
 888:	82 e0       	ldi	r24, 0x02	; 2
 88a:	0e 94 46 01 	call	0x28c	; 0x28c <lcd_cursor>
		lcd_string("TEMP:");
 88e:	8f e1       	ldi	r24, 0x1F	; 31
 890:	92 e0       	ldi	r25, 0x02	; 2
 892:	0e 94 65 01 	call	0x2ca	; 0x2ca <lcd_string>
		lcd_print(2,10,temperatureReading(),2);
 896:	0e 94 fa 03 	call	0x7f4	; 0x7f4 <temperatureReading>
 89a:	48 2f       	mov	r20, r24
 89c:	50 e0       	ldi	r21, 0x00	; 0
 89e:	22 e0       	ldi	r18, 0x02	; 2
 8a0:	30 e0       	ldi	r19, 0x00	; 0
 8a2:	6a e0       	ldi	r22, 0x0A	; 10
 8a4:	82 e0       	ldi	r24, 0x02	; 2
 8a6:	0e 94 74 01 	call	0x2e8	; 0x2e8 <lcd_print>
		lcd_wr_char(0xdf); //DEGREE SYMBOL
 8aa:	8f ed       	ldi	r24, 0xDF	; 223
 8ac:	0e 94 1d 01 	call	0x23a	; 0x23a <lcd_wr_char>
		lcd_string("C");
 8b0:	85 e2       	ldi	r24, 0x25	; 37
 8b2:	92 e0       	ldi	r25, 0x02	; 2
 8b4:	0e 94 65 01 	call	0x2ca	; 0x2ca <lcd_string>
 8b8:	2f ef       	ldi	r18, 0xFF	; 255
 8ba:	8f ef       	ldi	r24, 0xFF	; 255
 8bc:	9c e2       	ldi	r25, 0x2C	; 44
 8be:	21 50       	subi	r18, 0x01	; 1
 8c0:	80 40       	sbci	r24, 0x00	; 0
 8c2:	90 40       	sbci	r25, 0x00	; 0
 8c4:	e1 f7       	brne	.-8      	; 0x8be <main+0x92>
 8c6:	00 c0       	rjmp	.+0      	; 0x8c8 <main+0x9c>
 8c8:	00 00       	nop
		_delay_ms(1000);
		
		lcd_cursor(2,4);
 8ca:	64 e0       	ldi	r22, 0x04	; 4
 8cc:	82 e0       	ldi	r24, 0x02	; 2
 8ce:	0e 94 46 01 	call	0x28c	; 0x28c <lcd_cursor>
		lcd_string("HUMI:");
 8d2:	87 e2       	ldi	r24, 0x27	; 39
 8d4:	92 e0       	ldi	r25, 0x02	; 2
 8d6:	0e 94 65 01 	call	0x2ca	; 0x2ca <lcd_string>
		lcd_print(2,10,humidityReading(),3);
 8da:	0e 94 03 04 	call	0x806	; 0x806 <humidityReading>
 8de:	48 2f       	mov	r20, r24
 8e0:	50 e0       	ldi	r21, 0x00	; 0
 8e2:	23 e0       	ldi	r18, 0x03	; 3
 8e4:	30 e0       	ldi	r19, 0x00	; 0
 8e6:	6a e0       	ldi	r22, 0x0A	; 10
 8e8:	82 e0       	ldi	r24, 0x02	; 2
 8ea:	0e 94 74 01 	call	0x2e8	; 0x2e8 <lcd_print>
		lcd_string("% ");
 8ee:	8d e2       	ldi	r24, 0x2D	; 45
 8f0:	92 e0       	ldi	r25, 0x02	; 2
 8f2:	0e 94 65 01 	call	0x2ca	; 0x2ca <lcd_string>
 8f6:	2f ef       	ldi	r18, 0xFF	; 255
 8f8:	8f ef       	ldi	r24, 0xFF	; 255
 8fa:	9c e2       	ldi	r25, 0x2C	; 44
 8fc:	21 50       	subi	r18, 0x01	; 1
 8fe:	80 40       	sbci	r24, 0x00	; 0
 900:	90 40       	sbci	r25, 0x00	; 0
 902:	e1 f7       	brne	.-8      	; 0x8fc <main+0xd0>
 904:	00 c0       	rjmp	.+0      	; 0x906 <main+0xda>
 906:	00 00       	nop
 908:	be cf       	rjmp	.-132    	; 0x886 <main+0x5a>

0000090a <__umulhisi3>:
 90a:	a2 9f       	mul	r26, r18
 90c:	b0 01       	movw	r22, r0
 90e:	b3 9f       	mul	r27, r19
 910:	c0 01       	movw	r24, r0
 912:	a3 9f       	mul	r26, r19
 914:	70 0d       	add	r23, r0
 916:	81 1d       	adc	r24, r1
 918:	11 24       	eor	r1, r1
 91a:	91 1d       	adc	r25, r1
 91c:	b2 9f       	mul	r27, r18
 91e:	70 0d       	add	r23, r0
 920:	81 1d       	adc	r24, r1
 922:	11 24       	eor	r1, r1
 924:	91 1d       	adc	r25, r1
 926:	08 95       	ret

00000928 <_exit>:
 928:	f8 94       	cli

0000092a <__stop_program>:
 92a:	ff cf       	rjmp	.-2      	; 0x92a <__stop_program>
